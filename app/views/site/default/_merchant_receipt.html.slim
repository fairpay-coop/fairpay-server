/ todo: factor with payor receipt view and use data hash

- transaction = @transaction

b Payment Received - #{transaction.payor.name}
hr
br

b = transaction.embed.display_name
br
br

= render 'pay/payor_payee', transaction: @data[:transaction]

- if transaction.description.present?
  |Description: #{transaction.description}
  br

- memo = transaction.get_data_field(:memo)
- if memo.present?
  |Memo: #{memo}
  br

- if transaction.base_amount != transaction.paid_amount
  |Base Amount: $
  b
    / todo: understand why the helper isn't automatically available for ActionMailer rendering
    = ApplicationHelper.format_amount(transaction.base_amount)
  br
|Paid Amount: $
b
  = ApplicationHelper.format_amount(transaction.paid_amount)
br
br

|Payment Method: #{transaction.payment_type_display}
br
|Transaction Fee: $#{ApplicationHelper.format_amount(transaction.estimated_fee)}
br
- if transaction.estimated_fee > 0
  |Fee Allocation: #{transaction.fee_allocation_label_merchant}
  br
  |Customer paid fee surcharge: $#{ApplicationHelper.format_amount(transaction.allocated_fee)}
  br
  |Merchant absorbed transaction fee: $#{ApplicationHelper.format_amount(transaction.estimated_fee - transaction.allocated_fee)}
  br

|Transaction Id: #{transaction.uuid}
br
|Status: #{transaction.status}
br

- recurring = transaction.recurring_payment
- if recurring
  br
  |Recurring:
  b
    =< recurring.interval_display
  br
  - if recurring.next_date
    |Next Payment: #{recurring.next_date}
    br

  br
  |To see recurring payment status or to cancel go:
  b
  =< link_to 'here', recurring.status_url

